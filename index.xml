<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>遗忘的角落</title>
    <link>https://wx922.github.io/</link>
    <description>Recent content on 遗忘的角落</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 23 Jul 2019 21:21:26 +0800</lastBuildDate>
    
	<atom:link href="https://wx922.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>远程ADB调试的几种方式</title>
      <link>https://wx922.github.io/post/%E8%BF%9C%E7%A8%8Badb%E8%B0%83%E8%AF%95/</link>
      <pubDate>Tue, 23 Jul 2019 21:21:26 +0800</pubDate>
      
      <guid>https://wx922.github.io/post/%E8%BF%9C%E7%A8%8Badb%E8%B0%83%E8%AF%95/</guid>
      <description> 经过在网上搜寻，发下以下方式：
 先是使用usb线连接电脑跟安卓设备，打开电脑的cmd窗口，输入命令：adb tcpip 5555 ；该条命令是设置网络adb监听的端口，5555是默认，也可以设置成其它的。 该种方法是在系统有root权限下才能使用，依次输入命令：adb shell su -c setprop service.adb.tcp.port 5555（貌似不管用） 该种方法是在手机系统有root权限下才能使用，使用文件管理器按照以下路径打开文件：/system/build.prop，在该文件的最后添加以下内容：service.adb.tcp.port=5555  方法一、二在安卓设备重启后会失效，需重新设置才行，方法三在重启后依然有效，但是该两种方法需在系统有root权限下才能做修改，一、二需先使用usb模式连接电脑设置，三不需要连接电脑
连接与断开  在设置好端口后就可输入命令连接：adb connect 192.168.1.1:5555，其中192.168.1.1是安卓设备的ip地址，如果设置的端口号是默认的5555，后面的：5555可以不用输入 断开连接的命令：adb disconnect 192.168.1.1或者直接adb kill-server 切换成usb模式：adb usb  最后 附上我自己写的小脚本，在同一局域网连接usb线后执行脚本就可以直接连上远程。
ip=$(adb shell ifconfig | grep &#39;192.168&#39; | sed &#39;s/^.*addr://g&#39; | sed &#39;s/Bcast.*$//g&#39;) echo &amp;quot;device&#39;s ip is $ip &amp;quot; adb tcpip 5555 adb connect ${ip}  </description>
    </item>
    
    <item>
      <title>Windows常用软件列表</title>
      <link>https://wx922.github.io/post/windows%E5%BA%94%E7%94%A8%E5%88%97%E8%A1%A8/</link>
      <pubDate>Mon, 08 Jul 2019 22:07:05 +0800</pubDate>
      
      <guid>https://wx922.github.io/post/windows%E5%BA%94%E7%94%A8%E5%88%97%E8%A1%A8/</guid>
      <description>火绒安全 杀毒装一个这东西就够应付平常了，太厉害的病毒也不指望它能拦住，至少不流氓，拦截弹窗也好使。
Everything 搜索神器，之前用过一次，是很厉害。
TranslucentTB 任务栏透明工具。好看就完了。
ScreenToGif 免费开源 GIF 录屏制作软件之王？还没用过。
Dism++ 强大，也容易被忽视的系统优化软件，融数种系统优化工具于一体，基于微软官方系统修复工具 Dism 的底层技术 CBS 实现。
Geek Uninstaller 看名字就知道干什么的了，绿色免安装。
BandiZip 压缩软件。有便携版。
MacType 模拟Mac的风格渲染字体。
UWP应用 QuickLook 像mac一样按空格键就可以预览文件。
Snipaste 截图工具，强大、多平台</description>
    </item>
    
    <item>
      <title>Mac常用软件列表</title>
      <link>https://wx922.github.io/post/mac%E5%BA%94%E7%94%A8%E5%88%97%E8%A1%A8/</link>
      <pubDate>Fri, 31 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wx922.github.io/post/mac%E5%BA%94%E7%94%A8%E5%88%97%E8%A1%A8/</guid>
      <description>前言 在一次升级系统之后，我发现Mac变得很卡，查看活动监控也发现没有什么异常，在折腾了两个夜晚后，我查不到解决方案，估计周末要重装系统了:cry:。
在重装系统之前，我决定记录一下自己常用的软件设置之类的以防不时之需。
正文 Homebrew Mac必备，可以很方便的管理和安装各种软件，其中brew cast命令是用来安装和管理 GUI 应用软件。
下载地址
MAS 刚发现的命令行工具，可以安装Mac App Store中的应用，有以下特性：
 需要apple id(废话) 只能安装已购列表中的应用 批量安装或更新 快速切换账号  毕竟是在终端运行，没有乱七八糟的东西，如果嫌弃Mac App Store缓慢卡顿，MAS是一款不错的替代工具，几乎可以和homebrew完美互补。
VSCode 微软家的编辑器，目前的主力编辑器，安装各种插件可以打造成一个IDE。
内置终端，使用ctl+`快捷的打开和关闭，不用切换到终端，可以方便的用执行命令。默认的路径是当前项目路径，可在设置中更改。
内置git：
 在文件中实时显示改动（缩略图右边蓝色的标记），可以方便的看出来这个文件是否改动以及改动的位置 在git管理窗口中，显示文件状态（相当于git status），点击更改的文件，vscode会将文件分割成两个面板来比较更改 解决文件冲突，不吹不黑，是真的舒服，谁用谁知道。比查找&amp;rdquo;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;ldquo;不要好太多。  虽然经历过各种bug以及打开大的项目有些卡顿，但是以上两点真是让人离不开。
GitHub Desktop github出的git管理工具，使用频率不高，一般用作上线时查看当前文件的修改或者查看历史log的具体修改。
Firefox 主力浏览器，吃内存，启动时比Chrome卡，但是用习惯了。
TeamViewer 远程连接，方便。（商业用途警告:white_flower::baby_chick:)
ZeroTier One 可以组建虚拟局域网，可以开发很多用途，神器。被TeamViewer商业用途后，就是用它+远程桌面，发现意外的好用。
坚果云 云同步，某些方面比oneDrive要好，国内应该只有它能和oneDrive抗衡吧。
迅雷 &amp;ldquo;阉割&amp;ldquo;一下还是很好用的。
Motrix 基于 aria2 的下载工具，支持mac、win、linux三大平台，可以下载 HTTP、FTP、BT、磁力链、百度网盘等资源，不支持 ed2k。这样看是很NB，我得先用用试试。
网易MuMu Mac下当时唯一能用的安卓模拟器，然后一直用的现在。
Tencent Lemon 看名字就知道是企鹅家的，为数不多的良心出品，目前一直在内测(apple store上的lite版功能不全)。菜单栏显示内存和网速很实用。
RunCat 菜单栏上唯一的生物，显示cpu的工作状态。
Hammerspoon 又一神器，用lua脚本就可以调用系统API。网上已经有很多现成的脚本实现各种功能，也可以自己定制，可替代很多App。
Clipy 剪切板管理工具。就俩字，好用。
eZip 国人开发的压缩工具，免费好用，:ox::beer:。在它之前其他的体验都一般，我都是用rar命令解压缩。</description>
    </item>
    
  </channel>
</rss>